version: '3.8'

services:
  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_PORT=${DATABASE_PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - app-network
    command: >
      bash -c "
        python scripts/load_data.py &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "

  frontend:
    build: 
      context: ../Frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ../Frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000  # Backend URL
      - CHOKIDAR_USEPOLLING=false  # Better for macOS performance
    stdin_open: true  # Enable interactive mode
    tty: true        # Enable terminal
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: ankane/pgvector:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rag_test
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 